"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * This class wraps a Request object from the Express Server and provides the react-server Request
 * API.
 */
var ExpressServerRequest = function () {
	function ExpressServerRequest(expressServerRequest) {
		_classCallCheck(this, ExpressServerRequest);

		this._wrappedRequest = expressServerRequest;
	}

	_createClass(ExpressServerRequest, [{
		key: "setRoute",
		value: function setRoute(route) {
			this._route = route;
		}
	}, {
		key: "getUrl",
		value: function getUrl() {
			return this._wrappedRequest.url;
		}
	}, {
		key: "getQuery",
		value: function getQuery() {
			return this._wrappedRequest.query;
		}
	}, {
		key: "getHostname",
		value: function getHostname() {
			return this._wrappedRequest.hostname;
		}
	}, {
		key: "getProtocol",
		value: function getProtocol() {
			return this._wrappedRequest.protocol;
		}
	}, {
		key: "getSecure",
		value: function getSecure() {
			return this._wrappedRequest.secure;
		}
	}, {
		key: "getRouteParams",
		value: function getRouteParams() {
			return this._route.params;
		}
	}, {
		key: "getMethod",
		value: function getMethod() {
			return this._wrappedRequest.method;
		}
	}, {
		key: "getHttpHeader",
		value: function getHttpHeader(name) {
			return this._wrappedRequest.get(name);
		}
	}, {
		key: "getRouteName",
		value: function getRouteName() {
			return this._route.name;
		}
	}, {
		key: "getHttpHeaders",
		value: function getHttpHeaders() {
			return this._wrappedRequest.headers;
		}
	}, {
		key: "getCookie",
		value: function getCookie(name) {
			return this.getCookies()[name];
		}
	}, {
		key: "getCookies",
		value: function getCookies() {
			return this._wrappedRequest.cookies;
		}
	}, {
		key: "getBody",
		value: function getBody() {
			return this._wrappedRequest.body;
		}
	}, {
		key: "getBundleData",
		value: function getBundleData() {
			return false; // Not on the server.
		}
	}]);

	return ExpressServerRequest;
}();

module.exports = ExpressServerRequest;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV4cHJlc3NTZXJ2ZXJSZXF1ZXN0LmpzIl0sIm5hbWVzIjpbIkV4cHJlc3NTZXJ2ZXJSZXF1ZXN0IiwiZXhwcmVzc1NlcnZlclJlcXVlc3QiLCJfd3JhcHBlZFJlcXVlc3QiLCJyb3V0ZSIsIl9yb3V0ZSIsInVybCIsInF1ZXJ5IiwiaG9zdG5hbWUiLCJwcm90b2NvbCIsInNlY3VyZSIsInBhcmFtcyIsIm1ldGhvZCIsIm5hbWUiLCJnZXQiLCJoZWFkZXJzIiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJib2R5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0E7Ozs7SUFJTUEsb0I7QUFDTCwrQkFBWUMsb0JBQVosRUFBa0M7QUFBQTs7QUFDakMsT0FBS0MsZUFBTCxHQUF1QkQsb0JBQXZCO0FBQ0E7Ozs7MkJBRVFFLEssRUFBTztBQUNmLFFBQUtDLE1BQUwsR0FBY0QsS0FBZDtBQUNBOzs7MkJBRVE7QUFDUixVQUFPLEtBQUtELGVBQUwsQ0FBcUJHLEdBQTVCO0FBQ0E7Ozs2QkFFVTtBQUNWLFVBQU8sS0FBS0gsZUFBTCxDQUFxQkksS0FBNUI7QUFDQTs7O2dDQUVhO0FBQ2IsVUFBTyxLQUFLSixlQUFMLENBQXFCSyxRQUE1QjtBQUNBOzs7Z0NBRWE7QUFDYixVQUFPLEtBQUtMLGVBQUwsQ0FBcUJNLFFBQTVCO0FBQ0E7Ozs4QkFFVztBQUNYLFVBQU8sS0FBS04sZUFBTCxDQUFxQk8sTUFBNUI7QUFDQTs7O21DQUVnQjtBQUNoQixVQUFPLEtBQUtMLE1BQUwsQ0FBWU0sTUFBbkI7QUFDQTs7OzhCQUVXO0FBQ1gsVUFBTyxLQUFLUixlQUFMLENBQXFCUyxNQUE1QjtBQUNBOzs7Z0NBRWFDLEksRUFBTTtBQUNuQixVQUFPLEtBQUtWLGVBQUwsQ0FBcUJXLEdBQXJCLENBQXlCRCxJQUF6QixDQUFQO0FBQ0E7OztpQ0FFYztBQUNkLFVBQU8sS0FBS1IsTUFBTCxDQUFZUSxJQUFuQjtBQUNBOzs7bUNBRWdCO0FBQ2hCLFVBQU8sS0FBS1YsZUFBTCxDQUFxQlksT0FBNUI7QUFDQTs7OzRCQUVTRixJLEVBQU07QUFDZixVQUFPLEtBQUtHLFVBQUwsR0FBa0JILElBQWxCLENBQVA7QUFDQTs7OytCQUVZO0FBQ1osVUFBTyxLQUFLVixlQUFMLENBQXFCYyxPQUE1QjtBQUNBOzs7NEJBRVM7QUFDVCxVQUFPLEtBQUtkLGVBQUwsQ0FBcUJlLElBQTVCO0FBQ0E7OztrQ0FFZTtBQUNmLFVBQU8sS0FBUCxDQURlLENBQ0Q7QUFDZDs7Ozs7O0FBSUZDLE9BQU9DLE9BQVAsR0FBaUJuQixvQkFBakIiLCJmaWxlIjoiRXhwcmVzc1NlcnZlclJlcXVlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogVGhpcyBjbGFzcyB3cmFwcyBhIFJlcXVlc3Qgb2JqZWN0IGZyb20gdGhlIEV4cHJlc3MgU2VydmVyIGFuZCBwcm92aWRlcyB0aGUgcmVhY3Qtc2VydmVyIFJlcXVlc3RcbiAqIEFQSS5cbiAqL1xuY2xhc3MgRXhwcmVzc1NlcnZlclJlcXVlc3Qge1xuXHRjb25zdHJ1Y3RvcihleHByZXNzU2VydmVyUmVxdWVzdCkge1xuXHRcdHRoaXMuX3dyYXBwZWRSZXF1ZXN0ID0gZXhwcmVzc1NlcnZlclJlcXVlc3Q7XG5cdH1cblxuXHRzZXRSb3V0ZShyb3V0ZSkge1xuXHRcdHRoaXMuX3JvdXRlID0gcm91dGU7XG5cdH1cblxuXHRnZXRVcmwoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3dyYXBwZWRSZXF1ZXN0LnVybDtcblx0fVxuXG5cdGdldFF1ZXJ5KCkge1xuXHRcdHJldHVybiB0aGlzLl93cmFwcGVkUmVxdWVzdC5xdWVyeTtcblx0fVxuXG5cdGdldEhvc3RuYW1lKCkge1xuXHRcdHJldHVybiB0aGlzLl93cmFwcGVkUmVxdWVzdC5ob3N0bmFtZTtcblx0fVxuXG5cdGdldFByb3RvY29sKCkge1xuXHRcdHJldHVybiB0aGlzLl93cmFwcGVkUmVxdWVzdC5wcm90b2NvbDtcblx0fVxuXG5cdGdldFNlY3VyZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fd3JhcHBlZFJlcXVlc3Quc2VjdXJlO1xuXHR9XG5cblx0Z2V0Um91dGVQYXJhbXMoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3JvdXRlLnBhcmFtcztcblx0fVxuXG5cdGdldE1ldGhvZCgpIHtcblx0XHRyZXR1cm4gdGhpcy5fd3JhcHBlZFJlcXVlc3QubWV0aG9kO1xuXHR9XG5cblx0Z2V0SHR0cEhlYWRlcihuYW1lKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3dyYXBwZWRSZXF1ZXN0LmdldChuYW1lKTtcblx0fVxuXG5cdGdldFJvdXRlTmFtZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fcm91dGUubmFtZTtcblx0fVxuXG5cdGdldEh0dHBIZWFkZXJzKCkge1xuXHRcdHJldHVybiB0aGlzLl93cmFwcGVkUmVxdWVzdC5oZWFkZXJzO1xuXHR9XG5cblx0Z2V0Q29va2llKG5hbWUpIHtcblx0XHRyZXR1cm4gdGhpcy5nZXRDb29raWVzKClbbmFtZV07XG5cdH1cblxuXHRnZXRDb29raWVzKCkge1xuXHRcdHJldHVybiB0aGlzLl93cmFwcGVkUmVxdWVzdC5jb29raWVzO1xuXHR9XG5cblx0Z2V0Qm9keSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fd3JhcHBlZFJlcXVlc3QuYm9keTtcblx0fVxuXG5cdGdldEJ1bmRsZURhdGEoKSB7XG5cdFx0cmV0dXJuIGZhbHNlOyAvLyBOb3Qgb24gdGhlIHNlcnZlci5cblx0fVxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gRXhwcmVzc1NlcnZlclJlcXVlc3Q7XG4iXX0=
