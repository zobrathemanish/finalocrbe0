"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _benchmark = require("benchmark");

var _Navigator = require("../context/Navigator.js");

var _Navigator2 = _interopRequireDefault(_Navigator);

var _ExpressServerRequest = require("../ExpressServerRequest.js");

var _ExpressServerRequest2 = _interopRequireDefault(_ExpressServerRequest);

var _RequestLocalStorage = require("../util/RequestLocalStorage.js");

var _RequestLocalStorage2 = _interopRequireDefault(_RequestLocalStorage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Middleware = function () {
	function Middleware() {
		_classCallCheck(this, Middleware);
	}

	_createClass(Middleware, [{
		key: "handleRoute",
		value: function handleRoute(next) {
			return next();
		}
	}, {
		key: "getHeaders",
		value: function getHeaders(next) {
			return next();
		}
	}, {
		key: "getTitle",
		value: function getTitle(next) {
			return next();
		}
	}, {
		key: "getScripts",
		value: function getScripts(next) {
			return next();
		}
	}, {
		key: "getHeadStylesheets",
		value: function getHeadStylesheets(next) {
			return next();
		}
	}, {
		key: "getMetaTags",
		value: function getMetaTags(next) {
			return next();
		}
	}, {
		key: "getLinkTags",
		value: function getLinkTags(next) {
			return next();
		}
	}, {
		key: "getBase",
		value: function getBase(next) {
			return next();
		}
	}, {
		key: "getBodyClasses",
		value: function getBodyClasses(next) {
			return next();
		}
	}, {
		key: "getElements",
		value: function getElements(next) {
			return next();
		}
	}]);

	return Middleware;
}();

function run(n) {
	var m = new Array(n).join(".").split(".").map(function () {
		return Middleware;
	});
	var navigator = new _Navigator2.default({}, { routes: {} });
	var request = new _ExpressServerRequest2.default({ query: {} });

	var Page = function (_Middleware) {
		_inherits(Page, _Middleware);

		function Page() {
			_classCallCheck(this, Page);

			return _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).apply(this, arguments));
		}

		_createClass(Page, null, [{
			key: "middleware",
			value: function middleware() {
				return m;
			}
		}]);

		return Page;
	}(Middleware);

	return function (deferred) {
		navigator.once('navigateDone', function () {
			deferred.resolve();
		});
		_RequestLocalStorage2.default.startRequest(function () {
			navigator.handlePage(Page, request, "pageload");
		});
	};
}

new _benchmark.Suite().add("1", run(1), { defer: true }).add("10", run(10), { defer: true }).add("100", run(100), { defer: true }).add("1000", run(1000), { defer: true }).on('cycle', function (v) {
	return console.log(v.target.name + "\t" + v.target.stats.mean);
}).run();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYmVuY2hfXy9oYW5kbGVQYWdlLmpzIl0sIm5hbWVzIjpbIk1pZGRsZXdhcmUiLCJuZXh0IiwicnVuIiwibiIsIm0iLCJBcnJheSIsImpvaW4iLCJzcGxpdCIsIm1hcCIsIm5hdmlnYXRvciIsInJvdXRlcyIsInJlcXVlc3QiLCJxdWVyeSIsIlBhZ2UiLCJkZWZlcnJlZCIsIm9uY2UiLCJyZXNvbHZlIiwic3RhcnRSZXF1ZXN0IiwiaGFuZGxlUGFnZSIsImFkZCIsImRlZmVyIiwib24iLCJ2IiwiY29uc29sZSIsImxvZyIsInRhcmdldCIsIm5hbWUiLCJzdGF0cyIsIm1lYW4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7Ozs7OztJQUVNQSxVOzs7Ozs7OzhCQUNlQyxJLEVBQUs7QUFBQyxVQUFPQSxNQUFQO0FBQWM7Ozs2QkFDcEJBLEksRUFBSztBQUFDLFVBQU9BLE1BQVA7QUFBYzs7OzJCQUNwQkEsSSxFQUFLO0FBQUMsVUFBT0EsTUFBUDtBQUFjOzs7NkJBQ3BCQSxJLEVBQUs7QUFBQyxVQUFPQSxNQUFQO0FBQWM7OztxQ0FDcEJBLEksRUFBSztBQUFDLFVBQU9BLE1BQVA7QUFBYzs7OzhCQUNwQkEsSSxFQUFLO0FBQUMsVUFBT0EsTUFBUDtBQUFjOzs7OEJBQ3BCQSxJLEVBQUs7QUFBQyxVQUFPQSxNQUFQO0FBQWM7OzswQkFDcEJBLEksRUFBSztBQUFDLFVBQU9BLE1BQVA7QUFBYzs7O2lDQUNwQkEsSSxFQUFLO0FBQUMsVUFBT0EsTUFBUDtBQUFjOzs7OEJBQ3BCQSxJLEVBQUs7QUFBQyxVQUFPQSxNQUFQO0FBQWM7Ozs7OztBQUd6QyxTQUFTQyxHQUFULENBQWNDLENBQWQsRUFBaUI7QUFDaEIsS0FBTUMsSUFBWSxJQUFJQyxLQUFKLENBQVVGLENBQVYsRUFBYUcsSUFBYixDQUFrQixHQUFsQixFQUF1QkMsS0FBdkIsQ0FBNkIsR0FBN0IsRUFBa0NDLEdBQWxDLENBQXNDO0FBQUEsU0FBTVIsVUFBTjtBQUFBLEVBQXRDLENBQWxCO0FBQ0EsS0FBTVMsWUFBWSx3QkFBYyxFQUFkLEVBQWtCLEVBQUNDLFFBQVEsRUFBVCxFQUFsQixDQUFsQjtBQUNBLEtBQU1DLFVBQVksbUNBQXlCLEVBQUVDLE9BQU8sRUFBVCxFQUF6QixDQUFsQjs7QUFIZ0IsS0FLVkMsSUFMVTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsZ0NBS29DO0FBQUMsV0FBT1QsQ0FBUDtBQUFTO0FBTDlDOztBQUFBO0FBQUEsR0FLR0osVUFMSDs7QUFPaEIsUUFBTyxVQUFVYyxRQUFWLEVBQW9CO0FBQzFCTCxZQUFVTSxJQUFWLENBQWUsY0FBZixFQUErQixZQUFXO0FBQUVELFlBQVNFLE9BQVQ7QUFBb0IsR0FBaEU7QUFDQSxnQ0FBb0JDLFlBQXBCLENBQWlDLFlBQU07QUFDdENSLGFBQVVTLFVBQVYsQ0FBcUJMLElBQXJCLEVBQTJCRixPQUEzQixFQUFvQyxVQUFwQztBQUNBLEdBRkQ7QUFHQSxFQUxEO0FBTUE7O0FBRUQsdUJBQ0VRLEdBREYsQ0FDTSxHQUROLEVBQ2NqQixJQUFPLENBQVAsQ0FEZCxFQUN5QixFQUFFa0IsT0FBTyxJQUFULEVBRHpCLEVBRUVELEdBRkYsQ0FFTSxJQUZOLEVBRWNqQixJQUFNLEVBQU4sQ0FGZCxFQUV5QixFQUFFa0IsT0FBTyxJQUFULEVBRnpCLEVBR0VELEdBSEYsQ0FHTSxLQUhOLEVBR2NqQixJQUFLLEdBQUwsQ0FIZCxFQUd5QixFQUFFa0IsT0FBTyxJQUFULEVBSHpCLEVBSUVELEdBSkYsQ0FJTSxNQUpOLEVBSWNqQixJQUFJLElBQUosQ0FKZCxFQUl5QixFQUFFa0IsT0FBTyxJQUFULEVBSnpCLEVBS0VDLEVBTEYsQ0FLSyxPQUxMLEVBS2MsVUFBQ0MsQ0FBRDtBQUFBLFFBQU9DLFFBQVFDLEdBQVIsQ0FBWUYsRUFBRUcsTUFBRixDQUFTQyxJQUFULEdBQWdCLElBQWhCLEdBQXVCSixFQUFFRyxNQUFGLENBQVNFLEtBQVQsQ0FBZUMsSUFBbEQsQ0FBUDtBQUFBLENBTGQsRUFNRTFCLEdBTkYiLCJmaWxlIjoiX19iZW5jaF9fL2hhbmRsZVBhZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N1aXRlfSAgICAgICAgICAgICAgZnJvbSBcImJlbmNobWFya1wiO1xuaW1wb3J0IE5hdmlnYXRvciAgICAgICAgICAgIGZyb20gXCIuLi9jb250ZXh0L05hdmlnYXRvci5qc1wiO1xuaW1wb3J0IEV4cHJlc3NTZXJ2ZXJSZXF1ZXN0IGZyb20gXCIuLi9FeHByZXNzU2VydmVyUmVxdWVzdC5qc1wiO1xuaW1wb3J0IFJlcXVlc3RMb2NhbFN0b3JhZ2UgIGZyb20gXCIuLi91dGlsL1JlcXVlc3RMb2NhbFN0b3JhZ2UuanNcIjtcblxuY2xhc3MgTWlkZGxld2FyZSB7XG5cdGhhbmRsZVJvdXRlICAgICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldEhlYWRlcnMgICAgICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldFRpdGxlICAgICAgICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldFNjcmlwdHMgICAgICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldEhlYWRTdHlsZXNoZWV0cyAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldE1ldGFUYWdzICAgICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldExpbmtUYWdzICAgICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldEJhc2UgICAgICAgICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldEJvZHlDbGFzc2VzICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG5cdGdldEVsZW1lbnRzICAgICAgICAobmV4dCl7cmV0dXJuIG5leHQoKX07XG59XG5cbmZ1bmN0aW9uIHJ1biAobikge1xuXHRjb25zdCBtICAgICAgICAgPSBuZXcgQXJyYXkobikuam9pbihcIi5cIikuc3BsaXQoXCIuXCIpLm1hcCgoKSA9PiBNaWRkbGV3YXJlKTtcblx0Y29uc3QgbmF2aWdhdG9yID0gbmV3IE5hdmlnYXRvcih7fSwge3JvdXRlczoge319KTtcblx0Y29uc3QgcmVxdWVzdCAgID0gbmV3IEV4cHJlc3NTZXJ2ZXJSZXF1ZXN0KHsgcXVlcnk6IHt9IH0pXG5cblx0Y2xhc3MgUGFnZSBleHRlbmRzIE1pZGRsZXdhcmUgeyBzdGF0aWMgbWlkZGxld2FyZSgpIHtyZXR1cm4gbX0gfVxuXG5cdHJldHVybiBmdW5jdGlvbiAoZGVmZXJyZWQpIHtcblx0XHRuYXZpZ2F0b3Iub25jZSgnbmF2aWdhdGVEb25lJywgZnVuY3Rpb24oKSB7IGRlZmVycmVkLnJlc29sdmUoKSB9KTtcblx0XHRSZXF1ZXN0TG9jYWxTdG9yYWdlLnN0YXJ0UmVxdWVzdCgoKSA9PiB7XG5cdFx0XHRuYXZpZ2F0b3IuaGFuZGxlUGFnZShQYWdlLCByZXF1ZXN0LCBcInBhZ2Vsb2FkXCIpO1xuXHRcdH0pO1xuXHR9XG59XG5cbm5ldyBTdWl0ZSgpXG5cdC5hZGQoXCIxXCIsICAgIHJ1biggICAxKSwgeyBkZWZlcjogdHJ1ZSB9KVxuXHQuYWRkKFwiMTBcIiwgICBydW4oICAxMCksIHsgZGVmZXI6IHRydWUgfSlcblx0LmFkZChcIjEwMFwiLCAgcnVuKCAxMDApLCB7IGRlZmVyOiB0cnVlIH0pXG5cdC5hZGQoXCIxMDAwXCIsIHJ1bigxMDAwKSwgeyBkZWZlcjogdHJ1ZSB9KVxuXHQub24oJ2N5Y2xlJywgKHYpID0+IGNvbnNvbGUubG9nKHYudGFyZ2V0Lm5hbWUgKyBcIlxcdFwiICsgdi50YXJnZXQuc3RhdHMubWVhbikpXG5cdC5ydW4oKVxuIl19
