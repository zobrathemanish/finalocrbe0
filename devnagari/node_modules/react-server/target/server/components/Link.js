'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react'),
    PropTypes = require('prop-types'),
    navigateTo = require("../util/navigateTo");

var Link = function (_React$Component) {
	_inherits(Link, _React$Component);

	_createClass(Link, null, [{
		key: 'displayName',
		get: function get() {
			return 'Link';
		}
	}, {
		key: 'propTypes',
		get: function get() {
			return {
				path: PropTypes.string,
				href: PropTypes.string,
				onClick: PropTypes.func,
				bundleData: PropTypes.bool,
				reuseDom: PropTypes.bool,
				className: PropTypes.string
			};
		}
	}, {
		key: 'defaultProps',
		get: function get() {
			return {
				bundleData: false,
				reuseDom: false
			};
		}
	}]);

	function Link(props) {
		_classCallCheck(this, Link);

		var _this = _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).call(this, props));

		_this._onClick = _this._onClick.bind(_this);
		return _this;
	}

	_createClass(Link, [{
		key: 'render',
		value: function render() {
			return React.createElement(
				'a',
				{ href: this.props.path || this.props.href, onClick: this._onClick, className: this.props.className },
				this.props.children
			);
		}
	}, {
		key: '_onClick',
		value: function _onClick(e) {

			// TODO: IE8-9 detection

			// TODO: if OSX && key.isMeta?
			if (!e.metaKey) {
				e.preventDefault();
				e.stopPropagation();
				var _props = this.props,
				    bundleData = _props.bundleData,
				    reuseDom = _props.reuseDom;

				navigateTo(this.props.path || this.props.href, {
					bundleData: bundleData,
					reuseDom: reuseDom
				});
				if (this.props.onClick) {
					this.props.onClick(e);
				}
			} else {
				// do normal browser navigate
			}
		}
	}]);

	return Link;
}(React.Component);

module.exports = Link;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvTGluay5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwiUHJvcFR5cGVzIiwibmF2aWdhdGVUbyIsIkxpbmsiLCJwYXRoIiwic3RyaW5nIiwiaHJlZiIsIm9uQ2xpY2siLCJmdW5jIiwiYnVuZGxlRGF0YSIsImJvb2wiLCJyZXVzZURvbSIsImNsYXNzTmFtZSIsInByb3BzIiwiX29uQ2xpY2siLCJiaW5kIiwiY2hpbGRyZW4iLCJlIiwibWV0YUtleSIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiQ29tcG9uZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLElBQUlBLFFBQVFDLFFBQVEsT0FBUixDQUFaO0FBQUEsSUFDQ0MsWUFBWUQsUUFBUSxZQUFSLENBRGI7QUFBQSxJQUVDRSxhQUFhRixRQUFRLG9CQUFSLENBRmQ7O0lBSU1HLEk7Ozs7O3NCQUVvQjtBQUN4QixVQUFPLE1BQVA7QUFDQTs7O3NCQUVzQjtBQUN0QixVQUFPO0FBQ05DLFVBQWFILFVBQVVJLE1BRGpCO0FBRU5DLFVBQWFMLFVBQVVJLE1BRmpCO0FBR05FLGFBQWFOLFVBQVVPLElBSGpCO0FBSU5DLGdCQUFhUixVQUFVUyxJQUpqQjtBQUtOQyxjQUFhVixVQUFVUyxJQUxqQjtBQU1ORSxlQUFhWCxVQUFVSTtBQU5qQixJQUFQO0FBUUE7OztzQkFFeUI7QUFDekIsVUFBTztBQUNOSSxnQkFBYSxLQURQO0FBRU5FLGNBQWE7QUFGUCxJQUFQO0FBSUE7OztBQUVELGVBQVlFLEtBQVosRUFBbUI7QUFBQTs7QUFBQSwwR0FDWkEsS0FEWTs7QUFHbEIsUUFBS0MsUUFBTCxHQUFnQixNQUFLQSxRQUFMLENBQWNDLElBQWQsT0FBaEI7QUFIa0I7QUFJbEI7Ozs7MkJBRVE7QUFDUixVQUNDO0FBQUE7QUFBQSxNQUFHLE1BQU0sS0FBS0YsS0FBTCxDQUFXVCxJQUFYLElBQW1CLEtBQUtTLEtBQUwsQ0FBV1AsSUFBdkMsRUFBNkMsU0FBUyxLQUFLUSxRQUEzRCxFQUFxRSxXQUFXLEtBQUtELEtBQUwsQ0FBV0QsU0FBM0Y7QUFBdUcsU0FBS0MsS0FBTCxDQUFXRztBQUFsSCxJQUREO0FBR0E7OzsyQkFFUUMsQyxFQUFHOztBQUVYOztBQUVBO0FBQ0EsT0FBSSxDQUFDQSxFQUFFQyxPQUFQLEVBQWdCO0FBQ2ZELE1BQUVFLGNBQUY7QUFDQUYsTUFBRUcsZUFBRjtBQUZlLGlCQUdnQixLQUFLUCxLQUhyQjtBQUFBLFFBR1JKLFVBSFEsVUFHUkEsVUFIUTtBQUFBLFFBR0lFLFFBSEosVUFHSUEsUUFISjs7QUFJZlQsZUFBVyxLQUFLVyxLQUFMLENBQVdULElBQVgsSUFBbUIsS0FBS1MsS0FBTCxDQUFXUCxJQUF6QyxFQUErQztBQUM5Q0csMkJBRDhDO0FBRTlDRTtBQUY4QyxLQUEvQztBQUlBLFFBQUksS0FBS0UsS0FBTCxDQUFXTixPQUFmLEVBQXdCO0FBQ3ZCLFVBQUtNLEtBQUwsQ0FBV04sT0FBWCxDQUFtQlUsQ0FBbkI7QUFDQTtBQUNELElBWEQsTUFXTztBQUNOO0FBQ0E7QUFDRDs7OztFQXZEaUJsQixNQUFNc0IsUzs7QUEwRHpCQyxPQUFPQyxPQUFQLEdBQWlCcEIsSUFBakIiLCJmaWxlIjoiY29tcG9uZW50cy9MaW5rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpLFxuXHRQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyksXG5cdG5hdmlnYXRlVG8gPSByZXF1aXJlKFwiLi4vdXRpbC9uYXZpZ2F0ZVRvXCIpO1xuXG5jbGFzcyBMaW5rIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuXHRzdGF0aWMgZ2V0IGRpc3BsYXlOYW1lKCkge1xuXHRcdHJldHVybiAnTGluayc7XG5cdH1cblxuXHRzdGF0aWMgZ2V0IHByb3BUeXBlcygpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0cGF0aCAgICAgICA6IFByb3BUeXBlcy5zdHJpbmcsXG5cdFx0XHRocmVmICAgICAgIDogUHJvcFR5cGVzLnN0cmluZyxcblx0XHRcdG9uQ2xpY2sgICAgOiBQcm9wVHlwZXMuZnVuYyxcblx0XHRcdGJ1bmRsZURhdGEgOiBQcm9wVHlwZXMuYm9vbCxcblx0XHRcdHJldXNlRG9tICAgOiBQcm9wVHlwZXMuYm9vbCxcblx0XHRcdGNsYXNzTmFtZSAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuXHRcdH07XG5cdH1cblxuXHRzdGF0aWMgZ2V0IGRlZmF1bHRQcm9wcygpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0YnVuZGxlRGF0YSA6IGZhbHNlLFxuXHRcdFx0cmV1c2VEb20gICA6IGZhbHNlLFxuXHRcdH07XG5cdH1cblxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdHRoaXMuX29uQ2xpY2sgPSB0aGlzLl9vbkNsaWNrLmJpbmQodGhpcyk7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxhIGhyZWY9e3RoaXMucHJvcHMucGF0aCB8fCB0aGlzLnByb3BzLmhyZWZ9IG9uQ2xpY2s9e3RoaXMuX29uQ2xpY2t9IGNsYXNzTmFtZT17dGhpcy5wcm9wcy5jbGFzc05hbWV9Pnt0aGlzLnByb3BzLmNoaWxkcmVufTwvYT5cblx0XHQpO1xuXHR9XG5cblx0X29uQ2xpY2soZSkge1xuXG5cdFx0Ly8gVE9ETzogSUU4LTkgZGV0ZWN0aW9uXG5cblx0XHQvLyBUT0RPOiBpZiBPU1ggJiYga2V5LmlzTWV0YT9cblx0XHRpZiAoIWUubWV0YUtleSkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdGNvbnN0IHtidW5kbGVEYXRhLCByZXVzZURvbX0gPSB0aGlzLnByb3BzO1xuXHRcdFx0bmF2aWdhdGVUbyh0aGlzLnByb3BzLnBhdGggfHwgdGhpcy5wcm9wcy5ocmVmLCB7XG5cdFx0XHRcdGJ1bmRsZURhdGEsXG5cdFx0XHRcdHJldXNlRG9tLFxuXHRcdFx0fSk7XG5cdFx0XHRpZiAodGhpcy5wcm9wcy5vbkNsaWNrKSB7XG5cdFx0XHRcdHRoaXMucHJvcHMub25DbGljayhlKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gZG8gbm9ybWFsIGJyb3dzZXIgbmF2aWdhdGVcblx0XHR9XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBMaW5rO1xuIl19
