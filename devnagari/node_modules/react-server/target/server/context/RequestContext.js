'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Navigator = require('./Navigator'),
    RequestLocals = require('../util/RequestLocalStorage').getNamespace();

var RequestContext = function () {
	function RequestContext(routes) {
		var _this = this;

		_classCallCheck(this, RequestContext);

		this.navigator = new Navigator(this, routes);

		this.navigator.on('page', function (page) {
			_this.page = page;
		});

		this._navigateListeners = [];

		this.registerRequestLocal();
	}

	_createClass(RequestContext, [{
		key: 'registerRequestLocal',


		// when we transition from page to page, we clear out the RequestLocals, but we need to re-register
		// the RequestContext in the RequestLocals.
		value: function registerRequestLocal() {
			RequestLocals().instance = this;
		}
	}, {
		key: 'setServerStash',
		value: function setServerStash(stash) {
			this.serverStash = stash;
			return this;
		}
	}, {
		key: 'getServerStash',
		value: function getServerStash() {
			return this.serverStash;
		}
	}, {
		key: 'setDeviceType',
		value: function setDeviceType(type) {
			this.deviceType = type;
			return this;
		}
	}, {
		key: 'getDeviceType',
		value: function getDeviceType() {
			return this.deviceType;
		}
	}, {
		key: 'getCurrentPath',
		value: function getCurrentPath() {
			return this.navigator.getCurrentRoute().url;
		}
	}, {
		key: 'onNavigate',
		value: function onNavigate(callback) {
			this.navigator.on('navigateDone', callback);
		}
	}, {
		key: 'onNavigateStart',
		value: function onNavigateStart(callback) {
			this.navigator.on('navigateStart', callback);
		}
	}, {
		key: 'onLoadComplete',
		value: function onLoadComplete(callback) {
			this.navigator.on('loadComplete', callback);
		}
	}, {
		key: 'navigate',
		value: function navigate(request, type) {
			this.navigator.navigate(request, type);
		}
	}], [{
		key: 'getCurrentRequestContext',
		value: function getCurrentRequestContext() {
			return RequestLocals().instance;
		}
	}]);

	return RequestContext;
}();

var RequestContextBuilder = function () {
	function RequestContextBuilder() {
		_classCallCheck(this, RequestContextBuilder);
	}

	_createClass(RequestContextBuilder, [{
		key: 'setRoutes',
		value: function setRoutes(routes) {
			this.routes = routes;
			return this;
		}
	}, {
		key: 'setDefaultXhrHeadersFromRequest',
		value: function setDefaultXhrHeadersFromRequest() {
			return this;
		}
	}, {
		key: 'create',
		value: function create(extraOpts) {

			return new RequestContext(this.routes, extraOpts);
		}
	}]);

	return RequestContextBuilder;
}();

module.exports = RequestContext;
module.exports.Builder = RequestContextBuilder;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRleHQvUmVxdWVzdENvbnRleHQuanMiXSwibmFtZXMiOlsiTmF2aWdhdG9yIiwicmVxdWlyZSIsIlJlcXVlc3RMb2NhbHMiLCJnZXROYW1lc3BhY2UiLCJSZXF1ZXN0Q29udGV4dCIsInJvdXRlcyIsIm5hdmlnYXRvciIsIm9uIiwicGFnZSIsIl9uYXZpZ2F0ZUxpc3RlbmVycyIsInJlZ2lzdGVyUmVxdWVzdExvY2FsIiwiaW5zdGFuY2UiLCJzdGFzaCIsInNlcnZlclN0YXNoIiwidHlwZSIsImRldmljZVR5cGUiLCJnZXRDdXJyZW50Um91dGUiLCJ1cmwiLCJjYWxsYmFjayIsInJlcXVlc3QiLCJuYXZpZ2F0ZSIsIlJlcXVlc3RDb250ZXh0QnVpbGRlciIsImV4dHJhT3B0cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJCdWlsZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFJQSxZQUFZQyxRQUFRLGFBQVIsQ0FBaEI7QUFBQSxJQUNDQyxnQkFBZ0JELFFBQVEsNkJBQVIsRUFBdUNFLFlBQXZDLEVBRGpCOztJQUdNQyxjO0FBRUwseUJBQWFDLE1BQWIsRUFBcUI7QUFBQTs7QUFBQTs7QUFFcEIsT0FBS0MsU0FBTCxHQUFpQixJQUFJTixTQUFKLENBQWMsSUFBZCxFQUFvQkssTUFBcEIsQ0FBakI7O0FBRUEsT0FBS0MsU0FBTCxDQUFlQyxFQUFmLENBQWtCLE1BQWxCLEVBQTBCLGdCQUFRO0FBQUMsU0FBS0MsSUFBTCxHQUFZQSxJQUFaO0FBQWlCLEdBQXBEOztBQUVBLE9BQUtDLGtCQUFMLEdBQTBCLEVBQTFCOztBQUVBLE9BQUtDLG9CQUFMO0FBQ0E7Ozs7OztBQU1EO0FBQ0E7eUNBQ3VCO0FBQ3RCUixtQkFBZ0JTLFFBQWhCLEdBQTJCLElBQTNCO0FBQ0E7OztpQ0FFZUMsSyxFQUFPO0FBQ3RCLFFBQUtDLFdBQUwsR0FBbUJELEtBQW5CO0FBQ0EsVUFBTyxJQUFQO0FBQ0E7OzttQ0FFaUI7QUFDakIsVUFBTyxLQUFLQyxXQUFaO0FBQ0E7OztnQ0FFY0MsSSxFQUFNO0FBQ3BCLFFBQUtDLFVBQUwsR0FBa0JELElBQWxCO0FBQ0EsVUFBTyxJQUFQO0FBQ0E7OztrQ0FFZ0I7QUFDaEIsVUFBTyxLQUFLQyxVQUFaO0FBQ0E7OzttQ0FFaUI7QUFDakIsVUFBTyxLQUFLVCxTQUFMLENBQWVVLGVBQWYsR0FBaUNDLEdBQXhDO0FBQ0E7Ozs2QkFFV0MsUSxFQUFVO0FBQ3JCLFFBQUtaLFNBQUwsQ0FBZUMsRUFBZixDQUFrQixjQUFsQixFQUFrQ1csUUFBbEM7QUFDQTs7O2tDQUVnQkEsUSxFQUFVO0FBQzFCLFFBQUtaLFNBQUwsQ0FBZUMsRUFBZixDQUFrQixlQUFsQixFQUFtQ1csUUFBbkM7QUFDQTs7O2lDQUVlQSxRLEVBQVU7QUFDekIsUUFBS1osU0FBTCxDQUFlQyxFQUFmLENBQWtCLGNBQWxCLEVBQWtDVyxRQUFsQztBQUNBOzs7MkJBRVNDLE8sRUFBU0wsSSxFQUFNO0FBQ3hCLFFBQUtSLFNBQUwsQ0FBZWMsUUFBZixDQUF3QkQsT0FBeEIsRUFBaUNMLElBQWpDO0FBQ0E7Ozs2Q0E5Q2tDO0FBQ2xDLFVBQU9aLGdCQUFnQlMsUUFBdkI7QUFDQTs7Ozs7O0lBZ0RJVSxxQjtBQUVMLGtDQUFlO0FBQUE7QUFDZDs7Ozs0QkFFU2hCLE0sRUFBUTtBQUNqQixRQUFLQSxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxVQUFPLElBQVA7QUFDQTs7O29EQUVrQztBQUNsQyxVQUFPLElBQVA7QUFDQTs7O3lCQUVPaUIsUyxFQUFXOztBQUVsQixVQUFPLElBQUlsQixjQUFKLENBQW1CLEtBQUtDLE1BQXhCLEVBQWdDaUIsU0FBaEMsQ0FBUDtBQUNBOzs7Ozs7QUFJRkMsT0FBT0MsT0FBUCxHQUFpQnBCLGNBQWpCO0FBQ0FtQixPQUFPQyxPQUFQLENBQWVDLE9BQWYsR0FBeUJKLHFCQUF6QiIsImZpbGUiOiJjb250ZXh0L1JlcXVlc3RDb250ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgTmF2aWdhdG9yID0gcmVxdWlyZSgnLi9OYXZpZ2F0b3InKSxcblx0UmVxdWVzdExvY2FscyA9IHJlcXVpcmUoJy4uL3V0aWwvUmVxdWVzdExvY2FsU3RvcmFnZScpLmdldE5hbWVzcGFjZSgpO1xuXG5jbGFzcyBSZXF1ZXN0Q29udGV4dCB7XG5cblx0Y29uc3RydWN0b3IgKHJvdXRlcykge1xuXG5cdFx0dGhpcy5uYXZpZ2F0b3IgPSBuZXcgTmF2aWdhdG9yKHRoaXMsIHJvdXRlcyk7XG5cblx0XHR0aGlzLm5hdmlnYXRvci5vbigncGFnZScsIHBhZ2UgPT4ge3RoaXMucGFnZSA9IHBhZ2V9KTtcblxuXHRcdHRoaXMuX25hdmlnYXRlTGlzdGVuZXJzID0gW107XG5cblx0XHR0aGlzLnJlZ2lzdGVyUmVxdWVzdExvY2FsKCk7XG5cdH1cblxuXHRzdGF0aWMgZ2V0Q3VycmVudFJlcXVlc3RDb250ZXh0ICgpIHtcblx0XHRyZXR1cm4gUmVxdWVzdExvY2FscygpLmluc3RhbmNlO1xuXHR9XG5cblx0Ly8gd2hlbiB3ZSB0cmFuc2l0aW9uIGZyb20gcGFnZSB0byBwYWdlLCB3ZSBjbGVhciBvdXQgdGhlIFJlcXVlc3RMb2NhbHMsIGJ1dCB3ZSBuZWVkIHRvIHJlLXJlZ2lzdGVyXG5cdC8vIHRoZSBSZXF1ZXN0Q29udGV4dCBpbiB0aGUgUmVxdWVzdExvY2Fscy5cblx0cmVnaXN0ZXJSZXF1ZXN0TG9jYWwoKSB7XG5cdFx0UmVxdWVzdExvY2FscygpLmluc3RhbmNlID0gdGhpcztcblx0fVxuXG5cdHNldFNlcnZlclN0YXNoIChzdGFzaCkge1xuXHRcdHRoaXMuc2VydmVyU3Rhc2ggPSBzdGFzaDtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdGdldFNlcnZlclN0YXNoICgpIHtcblx0XHRyZXR1cm4gdGhpcy5zZXJ2ZXJTdGFzaDtcblx0fVxuXG5cdHNldERldmljZVR5cGUgKHR5cGUpIHtcblx0XHR0aGlzLmRldmljZVR5cGUgPSB0eXBlO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0Z2V0RGV2aWNlVHlwZSAoKSB7XG5cdFx0cmV0dXJuIHRoaXMuZGV2aWNlVHlwZTtcblx0fVxuXG5cdGdldEN1cnJlbnRQYXRoICgpIHtcblx0XHRyZXR1cm4gdGhpcy5uYXZpZ2F0b3IuZ2V0Q3VycmVudFJvdXRlKCkudXJsO1xuXHR9XG5cblx0b25OYXZpZ2F0ZSAoY2FsbGJhY2spIHtcblx0XHR0aGlzLm5hdmlnYXRvci5vbignbmF2aWdhdGVEb25lJywgY2FsbGJhY2spO1xuXHR9XG5cblx0b25OYXZpZ2F0ZVN0YXJ0IChjYWxsYmFjaykge1xuXHRcdHRoaXMubmF2aWdhdG9yLm9uKCduYXZpZ2F0ZVN0YXJ0JywgY2FsbGJhY2spO1xuXHR9XG5cblx0b25Mb2FkQ29tcGxldGUgKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5uYXZpZ2F0b3Iub24oJ2xvYWRDb21wbGV0ZScsIGNhbGxiYWNrKTtcblx0fVxuXG5cdG5hdmlnYXRlIChyZXF1ZXN0LCB0eXBlKSB7XG5cdFx0dGhpcy5uYXZpZ2F0b3IubmF2aWdhdGUocmVxdWVzdCwgdHlwZSk7XG5cdH1cblxufVxuXG5jbGFzcyBSZXF1ZXN0Q29udGV4dEJ1aWxkZXIge1xuXG5cdGNvbnN0cnVjdG9yICgpIHtcblx0fVxuXG5cdHNldFJvdXRlcyhyb3V0ZXMpIHtcblx0XHR0aGlzLnJvdXRlcyA9IHJvdXRlcztcblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdHNldERlZmF1bHRYaHJIZWFkZXJzRnJvbVJlcXVlc3QgKCkge1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0Y3JlYXRlIChleHRyYU9wdHMpIHtcblxuXHRcdHJldHVybiBuZXcgUmVxdWVzdENvbnRleHQodGhpcy5yb3V0ZXMsIGV4dHJhT3B0cyk7XG5cdH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJlcXVlc3RDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMuQnVpbGRlciA9IFJlcXVlc3RDb250ZXh0QnVpbGRlcjtcblxuIl19
